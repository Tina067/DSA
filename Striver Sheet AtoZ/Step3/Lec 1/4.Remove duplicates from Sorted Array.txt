Question: https://leetcode.com/problems/remove-duplicates-from-sorted-array/description/
Approach :
class Solution {
public:
    int removeDuplicates(vector<int>& nums) {
        set<int>s;
        for(int i=0; i<nums.size(); i++){
            s.insert(nums[i]);
        }
        int i=0;
        for(auto num : s){
            nums[i] = num;
            i++;
        }
        return i;
    }
};

Time complexity: O(nlogn)
Space complexity: O(n)


Approach 2:
class Solution {
public:
    int removeDuplicates(vector<int>& nums) {
        if(nums.size() == 0) return -1;
        int i=0;
        for(int j=1; j<nums.size(); j++){
            if(nums[i] !=nums[j]){
                i++;
                nums[i] = nums[j];
            }
        }
        return i+1;
    }
};

Time complexity: O(n)
Space Complexity: O(1)