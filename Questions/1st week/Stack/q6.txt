// Maximum area of Histogram


class Solution
{
    void func1(long long arr[], int n, vector<int>&left){
        stack<pair<int,int>>s;
        for(int i=0; i<n; i++){
            if(s.size() == 0)
            left.push_back(0);
            else if(s.size()>0 && s.top().first<arr[i])
                left.push_back((s.top().second) + 1);
            else if(s.size()>0 && s.top().first >=arr[i]){
                while(s.size()>0 && s.top().first >= arr[i])
                s.pop();
                
                if(s.size() == 0)
                left.push_back(0);
                else
                left.push_back((s.top().second) + 1);
            }
            s.push({arr[i],i});
        }
    }
    
    void func2(long long arr[], int n, vector<int>&right){
        stack<pair<int,int>>s;
        for(int i = n-1; i>=0; i--){
            if(s.size() == 0)
            right.push_back(n-1);
            else if(s.size() > 0 && s.top().first < arr[i])
            right.push_back((s.top().second)-1);
            else if(s.size() > 0 && s.top().first >= arr[i]){
                while(s.size() >0 && s.top().first >= arr[i])
                s.pop();
                
                if(s.size() == 0)
                right.push_back(n-1);
                else
                right.push_back((s.top().second) - 1);
            }
            s.push({arr[i], i});
        }
        reverse(right.begin(), right.end());
    }
    public:
    //Function to find largest rectangular area possible in a given histogram.
    long long getMaxArea(long long arr[], int n)
    {
        if(n==1)
        return 1;
        vector<int>left;
        vector<int>right;
        func1(arr,n,left);
        func2(arr,n,right);
        int ans[n];
        for(int i=0; i<n; i++){
           ans[i] = abs(left[i] - right[i]);
        }
        
        int result = INT_MIN;
        for(int i=0; i<n; i++){
           if(ans[i]!=0){
               int temp = (ans[i] + 1)*arr[i];
               result = max(temp, result);
           } 
        }
        return result;
    }
};

//Something wrong in this code