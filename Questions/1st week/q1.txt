1. https://leetcode.com/problems/find-the-duplicate-number/
First Approach:
class Solution {
        public:
            int findDuplicate(vector<int>& nums) {
                for(int i=0; i<nums.size(); i++){
                    for(int j=i+1; j<nums.size(); j++){
                        if(nums[i] == nums[j])
                        return nums[i];
                    }
                }
                return -1;
            }
        };
Time Complexity: O(n^2)

Second Approach:
class Solution {
public:
    int findDuplicate(vector<int>& nums) {
       sort(nums.begin(), nums.end());
       int i;
       for(i=0; i<nums.size(); i++){
         if(nums[i]-nums[i+1]==0)
         break;
       } 
       return nums[i];
    }
};

Time Complexity: O(n)
