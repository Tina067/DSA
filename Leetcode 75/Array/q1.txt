Q: https://leetcode.com/problems/product-of-array-except-self/description/?envType=study-plan-v2&envId=leetcode-75
Naive Solution:
class Solution {
public:
    vector<int> productExceptSelf(vector<int>& nums) {
        vector<int>ans;
        for(int i=0; i<nums.size(); i++){
            int product =1;
            for(int j=0; j<nums.size(); j++){
                if(i==j)
                continue;
                product *=nums[j];
            }
            ans.push_back(product);
        }
        return ans;
    }
};

Time Complexity: O(n^2)


Second Approach: Using Postfix and Prefix
class Solution {
public:
    vector<int> productExceptSelf(vector<int>& nums) {
        int n = nums.size();
        vector<int>ans(n,1);
        int prefix=1;
        for(int i=0; i<n; i++){
            ans[i] = prefix;
            prefix = prefix * nums[i];
        }

        int postfix = 1;
        for(int i = n-1; i>=0; i--){
            ans[i] = ans[i] * postfix;
            postfix = postfix * nums[i];
        }
        return ans;
    }
};